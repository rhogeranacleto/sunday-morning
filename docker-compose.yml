version: '3'

services:
  postgres:
    image: postgres:12
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    networks:
      - nesjs-network
    volumes:
      - ./infra/init:/docker-entrypoint-initdb.d/

  server:
    container_name: server
    build:
      context: ./packages/server
      dockerfile: Dockerfile
    command: yarn start:prod
    ports:
      - 5000:5000
    networks:
      - nesjs-network
    volumes:
      - ./packages/server:/usr/src/app/server
      - /usr/src/app/server/node_modules
    environment:
      - PORT=5000
      - TYPEORM_CONNECTION=postgres
      - TYPEORM_HOST=postgres
      - TYPEORM_USERNAME=postgres
      - TYPEORM_PASSWORD=postgres
      - TYPEORM_DATABASE=postgres
      - TYPEORM_PORT=5432
      - TYPEORM_SYNCHRONIZE=true
      - TYPEORM_ENTITIES=./dist/**/*.entity.js
    restart: unless-stopped
    depends_on:
      - postgres

  front:
    container_name: front
    build:
      context: ./packages/front
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/app/front
      - /usr/src/app/front/node_modules
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000
      - DISABLE_ESLINT_PLUGIN=true

networks:
  nesjs-network:
